(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d229740"],{de09:function(e,n,a){"use strict";a.r(n);var s=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},t=[function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("article",{staticClass:"app-box"},[a("p",[e._v("学习版本：v4.29.6")]),a("p",[e._v("感觉不用整理，webpack文档写的很清楚")]),a("h2",[e._v("遇到的问题：")]),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_23521659/article/details/88353708"}},[e._v("（1）webpack打包报错：clean-webpack-plugin only accepts an options object")])]),a("p",[e._v("watch 之后自动刷新浏览器需要安装 webpack-dev-server，使用live serve插件打开html不安装也会自动刷新")]),a("section",[a("h2",[e._v("安装")]),a("pre",[a("code",[e._v("npm install --save-dev webpack webpack-cli")])])]),a("section",[a("h2",[e._v("起步")]),a("p",[e._v("代码在 index01.html 和 index.js 中")]),a("h3",[e._v("概念")]),a("p",[e._v("（1）dist：“分发”")]),a("p",[e._v("（2）在安装一个要打包到生产环境的安装包时，使用 npm install --save；\n        在安装一个用于开发环境的安装包（例如，linter, 测试库等），使用 npm install --save-dev")]),a("h3",[e._v("package.json中：")]),a("pre",[a("code",[e._v('+   "private": true,\n-   "main": "index.js",')])]),a("h3",[e._v("webpack01示例说明：")]),a("p",[e._v("把 index01.html 中通过 script 引入的 lodash 使其在 index.js 中通过 import 被引入，并且通过\n        npx webpack 打包生成 main.js 之后，在 index01.html 中引入main.js\n      ")]),a("h3",[e._v("配置文件：")]),a("p",[e._v("webpack.config.js")]),a("p",[e._v("没添加配置文件前使用 npx webpack 来打包，添加后使用 npx webpack --config webpack.config.js 进行打包")]),a("h3",[e._v("添加一个npm脚本：")]),a("p",[e._v('在 package.json 中添加 "build": "webpack"，就可以使用 npm run build 来替代 npx webpack。')])]),a("section",[a("h2",[e._v("使用webpack管理资源")]),a("h3",[e._v("概念：")]),a("p",[e._v("动态打包(dynamically bundle)所有依赖项。将避免打包未使用的模块。")]),a("h3",[e._v("管理css资源：")]),a("p",[e._v("代码在 index02.html 和 style.css 和 index.js 中")]),a("p",[e._v("（1）安装：npm install --save-dev style-loader css-loader")]),a("p",[e._v("（2）配置：在 webpack.config.js 中，"),a("pre",[a("code",[e._v("+   module: {\n+     rules: [\n+       {\n+         test: /\\.css$/,\n+         use: [\n+           'style-loader',\n+           'css-loader'\n+         ]\n+       }\n+     ]\n+   }")])])]),a("h3",[e._v("管理图片资源")]),a("p",[e._v("在 index02.html 和 index.js 中")]),a("p",[e._v("（1）安装：npm install --save-dev file-loader")]),a("p",[e._v("（2）配置："),a("pre",[a("code",[e._v("+       {\n+         test: /\\.(png|svg|jpg|gif)$/,\n+         use: [\n+           'file-loader'\n+         ]\n+       }")])])]),a("h3",[e._v("加载字体资源")]),a("p",[e._v("file-loader 和 url-loader 可以接收并加载任何文件，然后将其输出到构建目录。\n      这就是说，我们可以将它们用于任何类型的文件，包括字体。")]),a("p",[e._v("（1）安装：和图片资源一样，安装 file-loader")]),a("p",[e._v("（2）配置："),a("pre",[a("code",[e._v("+       {\n+         test: /\\.(woff|woff2|eot|ttf|otf)$/,\n+         use: [\n+           'file-loader'\n+         ]\n+       }")])])]),a("h3",[e._v("加载数据")]),a("p",[e._v("（1）json：JSON 支持是内置的，不用安装，直接import Data from './data.json'即可引入")]),a("p",[e._v("（2）CSV、TSV：【安装】：npm install --save-dev csv-loader")]),a("p",[e._v("（3）XML：【安装】：npm install --save-dev xml-loader")]),a("p",[e._v("（4）配置："),a("pre",[a("code",[e._v("+       {\n+         test: /\\.(csv|tsv)$/,\n+         use: [\n+           'csv-loader'\n+         ]\n+       },\n+       {\n+         test: /\\.xml$/,\n+         use: [\n+           'xml-loader'\n+         ]\n+       }")])])])])])}],p={name:"webpackStart",data:function(){return{createTime:"2019-03-20 16:57:00"}},components:{},mounted:function(){},computed:{},methods:{}},l=p,v=a("2877"),c=Object(v["a"])(l,s,t,!1,null,"55461bbf",null);n["default"]=c.exports}}]);